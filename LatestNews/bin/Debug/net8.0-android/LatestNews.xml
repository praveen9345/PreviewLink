<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LatestNews</name>
    </assembly>
    <members>
        <member name="T:LatestNews.App">
            <summary>
                Class representing the cross-platform application.
            </summary>
        </member>
        <member name="M:LatestNews.App.#ctor(LatestNews.IAppService)">
            <summary>
                Initializes the application.
            </summary>
            <param name="appService">The service used by the application.</param>
        </member>
        <member name="M:LatestNews.App.OnStart">
            <summary>
            Invoked when the application starts.
            </summary>
            <remarks>
            This method is called when the application is launched. It overrides the base class's <see cref="M:LatestNews.App.OnStart"/> method
            to perform necessary initialization tasks for the application. It calls the <c>OnStartAsync</c> method of the
            associated <see cref="T:LatestNews.AppService"/> instance asynchronously.
            </remarks>
        </member>
        <member name="T:LatestNews.AppService">
            <summary>
            Represents a service responsible for initializing and managing various application components.
            We use this in favor of the base class to migrate the databases on app start and to initialize
            the connection to App Center for error logging.
            </summary>
        </member>
        <member name="M:LatestNews.AppService.#ctor">
            <summary>
                Initializes the application.
            </summary>
        </member>
        <member name="M:LatestNews.AppService.OnStartAsync">
            <summary>
                The method used for
                - Performing the initial download of the ifu
                - Redirecting to the Login screen.
                - Setting the default culture
            </summary>
        </member>
        <member name="M:LatestNews.AppService.NavigateToFirstViewModelAsync">
            <summary>
                The method used for
                - Choosing and navigating to our first ViewModel
            </summary>
        </member>
        <member name="T:LatestNews.IAppService">
            <summary>
                Interface of the service with method for starting the service asynchronously.
            </summary>
        </member>
        <member name="M:LatestNews.IAppService.OnStartAsync">
            <summary>
                Performs necessary actions to start the application service asynchronously.
            </summary>
            <returns> An awaitable task. </returns>
        </member>
        <member name="T:LatestNews.AppShell">
            <summary>
                AppShell class for describing the visual hierarchy of the application.
            </summary>
        </member>
        <member name="M:LatestNews.AppShell.#ctor">
            <summary>
                AppShell constructor for initializing the component on the target OS.
            </summary>
        </member>
        <member name="T:LatestNews.Components.News.ViewModels.RootViewModel">
            <summary>
                The view model of the root view screen.
            </summary>
        </member>
        <member name="M:LatestNews.Components.News.ViewModels.RootViewModel.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:LatestNews.Components.News.ViewModels.RootViewModel" />.
            </summary>
        </member>
        <member name="M:LatestNews.Components.News.ViewModels.RootViewModel.InitializeAsync">
            <summary>
            Initializes the component asynchronously, ensuring proper initialization of general information
            and notification permissions.
            </summary>
            <returns>An awaitable task.</returns>
        </member>
        <member name="T:LatestNews.Components.News.Views.RootView">
            <summary>
            The code behind of the RootView view.
            </summary>
        </member>
        <member name="M:LatestNews.Components.News.Views.RootView.#ctor(LatestNews.Components.News.ViewModels.RootViewModel)">
            <summary>
             Initializes a new instance of the RootView class with the specified view model.
            </summary>
            <param name="viewModel">The RootViewModel associated with this view.</param>
        </member>
        <member name="M:LatestNews.Components.News.Views.RootView.OnBackButtonPressed">
            <summary>
             Overrides the behavior of the back button to quit the application.
            </summary>
        </member>
        <member name="T:LatestNews.Components.PlatformUtils.ServiceHelper">
            <summary>
                This service helper class shall be used if it is not possible to inject the <see cref="T:System.IServiceProvider" /> in a
                class there it is needed to resolve a specific service. Additionally it can be used in the platform specific code
                to resolve the services of the app.
            </summary>
        </member>
        <member name="P:LatestNews.Components.PlatformUtils.ServiceHelper.Services">
            <summary>
                This property contains the <see cref="T:System.IServiceProvider" /> of the <see cref="T:Microsoft.Maui.Hosting.MauiApp" /> which needs to be set in
                <see cref="M:LatestNews.Components.PlatformUtils.ServiceHelper.Initialize(System.IServiceProvider)" /> initially.
            </summary>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.ServiceHelper.Initialize(System.IServiceProvider)">
            <summary>
                This method needs to be called in <see cref="M:LatestNews.MauiProgram.CreateMauiApp" /> after the <see cref="T:Microsoft.Maui.Hosting.MauiApp" /> has
                been builded with the dedicated <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder" />.
            </summary>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.ServiceHelper.GetService``1">
            <summary>
                Use this method to get an arbitrary service which has been added as singleton in
                <see cref="M:LatestNews.MauiProgram.RegisterServices(Microsoft.Maui.Hosting.MauiAppBuilder)" /> method.
            </summary>
        </member>
        <member name="T:LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper">
            <summary>
                Wrapper interface for navigation functionality within a Maui Shell application.
            </summary>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper.GoToAsync(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Navigates to the specified route with optional animation and parameters.
            </summary>
            <param name="route">The route to navigate to.</param>
            <param name="animate">Determines whether the navigation should be animated.</param>
            <param name="parameters">Optional parameters to pass to the route.</param>
            <returns>A task that represents the asynchronous navigation operation.</returns>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper.GoToAsync(System.String,System.Boolean)">
            <summary>
            Navigates to the specified route with optional animation.
            </summary>
            <param name="route">The route to navigate to.</param>
            <param name="animate">Determines whether the navigation should be animated.</param>
            <returns>A task that represents the asynchronous navigation operation.</returns>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper.GetCurrentState">
            <summary>
            Gets the current state of the Shell navigation.
            </summary>
            <returns>The current <see cref="T:Microsoft.Maui.Controls.ShellNavigationState"/>.</returns>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper.PopToRootAsync(System.Boolean)">
            <summary>
            A task for asyncronization poping allpages off of the navigation stack.
            </summary>
            <param name="animation">Determines whether the navigation should be animated.</param>
            <returns>The current <see cref="T:Microsoft.Maui.Controls.ShellNavigationState"/>.</returns>
        </member>
        <member name="T:LatestNews.Components.PlatformUtils.Wrappers.NavigationShellWrapper">
            <summary>
             Wrapper class for provides navigation functionality within a Maui Shell application.
            </summary>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.NavigationShellWrapper.GoToAsync(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Navigates to the specified route with optional animation and parameters.
            </summary>
            <param name="route">The route to navigate to.</param>
            <param name="animate">Determines whether the navigation should be animated.</param>
            <param name="parameters">Optional parameters to pass to the route.</param>
            <returns>A task that represents the asynchronous navigation operation.</returns>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.NavigationShellWrapper.GoToAsync(System.String,System.Boolean)">
            <summary>
            Navigates to the specified route with optional animation.
            </summary>
            <param name="route">The route to navigate to.</param>
            <param name="animate">Determines whether the navigation should be animated.</param>
            <returns>A task that represents the asynchronous navigation operation.</returns>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.NavigationShellWrapper.GetCurrentState">
            <summary>
            Gets the current state of the Shell navigation.
            </summary>
            <returns>The current <see cref="T:Microsoft.Maui.Controls.ShellNavigationState"/>.</returns>
        </member>
        <member name="M:LatestNews.Components.PlatformUtils.Wrappers.NavigationShellWrapper.PopToRootAsync(System.Boolean)">
            <summary>
            A task for asyncronization poping allpages off of the navigation stack.
            </summary>
            <param name="animation">Determines whether the navigation should be animated.</param>
            <returns>The current <see cref="T:Microsoft.Maui.Controls.ShellNavigationState"/>.</returns>
        </member>
        <member name="T:LatestNews.Components.UiFunctionality.Localization.AppResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Localization.AppResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Localization.AppResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Localization.AppResources.RootViewModel_MenuText">
            <summary>
              Looks up a localized string similar to RootViewModel MenuText!!.
            </summary>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Localization.AppResources.RootViewModel_HistoryText">
            <summary>
              Looks up a localized string similar to RootViewModel HistoryText!!.
            </summary>
        </member>
        <member name="T:LatestNews.Components.UiFunctionality.Navigation.INavigationService">
            <summary>
                Interface of the service providing navigation functionality.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.Navigate``1">
            <summary>
                Navigates to a page.
            </summary>
            <typeparam name="T"> The class of the page. </typeparam>
            <returns> An awaitable task. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.Navigate``1(System.Object,System.Boolean)">
            <summary>
                Navigates to a page while passing a parameter.
            </summary>
            <typeparam name="T"> The class of the page. </typeparam>
            <param name="parameter"> The parameter to pass. </param>
            <param name="fromRoot"> Optionally reset the view stack. </param>
            <returns> An awaitable task. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.OpenDialogAndAwaitResultAsync``3(``1)">
            <summary>
                This method navigates to a specific page of type T asynchronously.
            </summary>
            <param name="parameter"> The parameter to pass.</param>
            <returns> A task representing the asynchronous navigation operation and returning a result of type TReturn. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.OpenDialogAndAwaitResultAsync``2">
            <summary>
                This method navigates to a specific page of type T asynchronously.
            </summary>
            <returns> A task representing the asynchronous navigation operation and returning a result of type TReturn. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.Close">
            <summary>
                Closes the current view and navigates back to the previous view.
            </summary>
            <returns>An awaitable task.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.CloseDialog``1(``0)">
            <summary>
                Closes the current dialog and navigates back in the application.
            </summary>
            <param name="result">The dialog result to pass back to the dialog caller.</param>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.Close``1(``0)">
            <summary>
                Closes the current view, navigates back to the previous screen and passes the
                provided parameters.
            </summary>
            <param name="parameter">The parameter to pass to the previous view.</param>
            <returns>A task awaiting the navigation.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.GetPageViewModel``1">
            <summary>
                 Get the ViewModel of the previous page.
            </summary>
            <typeparam name="T">The type of the ViewModel.</typeparam>
            <returns>The ViewModel of the specified type, or default if not found.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.OpenPopUpDialogAndAwaitResultAsync``1">
            <summary>
            Opens a pop-up dialog asynchronously and waits for the result.
            </summary>
            <typeparam name="T">The type of the data model used in the dialog. It must be a class that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.</typeparam>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation. The task result contains the result of the dialog.</returns>
        </member>
        <member name="T:LatestNews.Components.UiFunctionality.Navigation.NavigationService">
            <summary>
                Implementation of the service providing navigation functionality.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.#ctor(LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper,CommunityToolkit.Maui.Core.IPopupService)">
            <summary>
                Initializes a new instance of the <see cref="T:LatestNews.Components.UiFunctionality.Navigation.NavigationService"/> class
                with the specified <see cref="T:LatestNews.Components.PlatformUtils.Wrappers.INavigationShellWrapper"/>.
            </summary>
            <param name="navigationShellWrapper">The navigation shell wrapper.</param>
            <param name="popupService">The service responsible for handling popup dialogs.</param>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Navigation.NavigationService.DialogCloseCompletionSource">
            <summary>
                Maintain dialog completion sources to keep track of dialog results.
                A list is used to enable correct handling of dialog results, even if one dialog is shown on top of another dialog.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.Navigate``1">
            <summary>
                Navigates to a page.
            </summary>
            <typeparam name="T"> The class of the page. </typeparam>
            <returns> An awaitable task. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.Navigate``1(System.Object,System.Boolean)">
            <summary>
                Navigates to a page while passing a parameter.
            </summary>
            <typeparam name="T"> The class of the page. </typeparam>
            <param name="parameter"> The parameter to pass. </param>
            <returns> An awaitable task. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.OpenDialogAndAwaitResultAsync``3(``1)">
            <summary>
                This method navigates to a specific dialog of type T and awaits its result.
            </summary>
            <remarks>
                Please make sure to call the corresponding <see cref="M:LatestNews.Components.UiFunctionality.Navigation.INavigationService.CloseDialog``1(``0)"/>
                within the opened dialog, to ensure a correct closure of dialogs.
            </remarks>
            <param name="parameter"> The parameter to pass.</param>
            <returns> A task representing the asynchronous navigation operation and returning a result. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.OpenDialogAndAwaitResultAsync``2">
            <summary>
                This method navigates to a specific page of type T asynchronously.
            </summary>
            <returns> A task representing the asynchronous navigation operation and returning a result of type TReturn. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.Close">
            <summary>
                Closes the current view and navigates back to the previous view.
            </summary>
            <returns>An awaitable task.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.CloseDialog``1(``0)">
            <summary>
                Closes the current dialog and navigates back in the application.
            </summary>
            <param name="result">The dialog result to pass back to the dialog caller.</param>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.Close``1(``0)">
            <summary>
                Closes the current view, navigates back to the previous screen and passes the
                provided parameters.
            </summary>
            <param name="parameter">The parameter to pass to the previous view.</param>
            <returns>A task awaiting the navigation.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.ChangePresentation(System.Type)">
            <summary>
                Changes the presentation to a new page.
            </summary>
            <param name="typeOfPriorViewModel"> The type of the prior view model.</param>
            <returns> A task representing the asynchronous operation. </returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.GetPageViewModel``1">
            <summary>
                 Get the ViewModel of the previous page.
            </summary>
            <typeparam name="T">The type of the ViewModel.</typeparam>
            <returns>The ViewModel of the specified type, or default if not found.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.NavigationService.OpenPopUpDialogAndAwaitResultAsync``1">
            <summary>
            Opens a pop-up dialog asynchronously and waits for the result.
            </summary>
            <typeparam name="T">The type of the data model used in the dialog. 
            T must be a class that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.</typeparam>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation. 
            The task result contains the result of the dialog.</returns>
        </member>
        <member name="T:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel">
            <summary>
                The implementation of a base view model that provides general logic and information needed on all screens.
            </summary>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.NavigationService">
            <summary>
                Gets the navigation service to handle navigation throughout the app.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.#ctor">
            <summary>
                Initializes an instance of the <see cref="T:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel"/> class.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.InitializeAsync">
            <summary>
                Performs initialization tasks for the view model. This method is called when the view model is initialized.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.ViewAppearing">
            <summary>
                Sets the viewmodel as the current viewmodel. This method is called when the view appears.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.ViewDisappearing">
            <summary>
                This method is called when the view disappears.
            </summary>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.Item(System.String)">
            <summary>
                A property enabling the binding of localized resources by resource key.
                The provided resource key does only need to specify the part behind the underscore
                as the part before the underscore is automatically set according to the current view model.
            </summary>
            <param name="resourceKey">The resource key to get the value for.</param>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.IsBackNavigationEnabled">
            <summary>
                Gets or sets a value determining whether back navigation is enabled.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.OnBackButtonPressed">
            <summary>
                Handles the back button tap.
            </summary>
            <returns>A task handling the back navigation.</returns>
        </member>
        <member name="P:LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel.BackNavigationCommand">
            <summary>
                Command for the back button.
            </summary>
        </member>
        <member name="T:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView">
            <summary>
            The implementation of a base view that provides general logic and information needed for all views.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView.#ctor(LatestNews.Components.UiFunctionality.Navigation.ViewModels.BaseViewModel)">
            <summary>
            The default constructor of BaseView.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView.OnLoaded(System.Object,System.EventArgs)">
            <summary>
                Trigger the view appearing event as soon as the view is loaded.
            </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView.OnBackButtonPressed">
            <summary>
                Handles the back button tap.
                Prevents the back navigation, if defined in the corresponding view model.
            </summary>
            <returns>A value indicating whether back navigation was handled.</returns>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView.OnAppearing">
             <summary>
                 Despite the naming <see cref="M:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView.OnAppearing"/> is triggered before the view is loaded,
                 thus we use it for the initialization of the view model and trigger the appearing event
                 as soon as the view is actually loaded.
            
                 Using <see cref="E:Microsoft.Maui.Controls.Page.NavigatedTo"/> would also be an option, but it was
                 called that early that in some cases it lead to having the previously view model still active.
             </summary>
        </member>
        <member name="M:LatestNews.Components.UiFunctionality.Navigation.Views.BaseView.OnDisappearing">
            <summary>
               Handles the event when the page is being hidden or removed from the display.
            </summary>
        </member>
        <member name="T:LatestNews.MauiProgram">
            <summary>
                Configures and creates a new MauiApp instance. 
                This method builds the app using the specified fonts and community toolkit, 
                and initializes the ServiceHelper to link services with created singletons.
            </summary>
        </member>
        <member name="M:LatestNews.MauiProgram.RegisterServices(Microsoft.Maui.Hosting.MauiAppBuilder)">
            <summary>
                Registers all classes of which the name ends with "Service" 
                and that have an interface whose name ends with the name of the service.
            </summary>
            <param name="builder">The app in which the services are registered.</param>
        </member>
        <member name="M:LatestNews.MauiProgram.RegisterViewsAndViewModels(Microsoft.Maui.Hosting.MauiAppBuilder)">
            <summary>
                Registers all classes of which the name ends with "ViewModel" 
                and tries to register a matching view for each view model.
            </summary>
            <param name="builder">The app builder.</param>
        </member>
        <member name="M:LatestNews.MainActivity.OnCreate(Android.OS.Bundle)">
            <summary>
                Called when the activity is starting. Used for handling notification clicks if the app is closed.
            </summary>
            <param name="savedInstanceState">The saved instance state.</param>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Button.TextColorTo(Microsoft.Maui.Controls.Button,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_DatePicker.TextColorTo(Microsoft.Maui.Controls.DatePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Editor.TextColorTo(Microsoft.Maui.Controls.Editor,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Entry.TextColorTo(Microsoft.Maui.Controls.Entry,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_InputView.TextColorTo(Microsoft.Maui.Controls.InputView,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Label.TextColorTo(Microsoft.Maui.Controls.Label,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Picker.TextColorTo(Microsoft.Maui.Controls.Picker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_RadioButton.TextColorTo(Microsoft.Maui.Controls.RadioButton,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_SearchBar.TextColorTo(Microsoft.Maui.Controls.SearchBar,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_TimePicker.TextColorTo(Microsoft.Maui.Controls.TimePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
    </members>
</doc>
